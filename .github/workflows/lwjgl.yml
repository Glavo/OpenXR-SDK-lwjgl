name: LWJGL Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_PARAMS: --cache-control "public,must-revalidate,proxy-revalidate,max-age=0"
  OPENXR_PARAMS: -DDYNAMIC_LOADER=ON -DBUILD_WITH_STD_FILESYSTEM=OFF

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: centos:7
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64]
        include:
          - ARCH: x64
            PACKAGES: libX11-devel libxcb-devel wayland-devel mesa-libGL-devel vulkan-devel
    steps:
      - run: |
          yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum -y install git
        name: Upgrade git
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - run: |
          yum -y install epel-release
          yum -y update
        name: Configure yum
      - run: |
          yum -y install centos-release-scl
          yum -y install devtoolset-11-gcc-c++
          yum -y install cmake3 awscli
        name: Install build dependencies
      - run: yum -y install ${{matrix.PACKAGES}}
        name: Install OpenXR-SDK dependencies
      - run: |
          source scl_source enable devtoolset-11 || true
          cmake3 -B build $OPENXR_PARAMS -DCMAKE_BUILD_TYPE=Release
        name: Configure build
      - run: |
          source scl_source enable devtoolset-11 || true
          cmake3 --build build --parallel
          strip build/src/loader/libopenxr_loader.so
        name: Build
      - run: aws s3 cp build/src/loader/libopenxr_loader.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload artifact
      - run: |
          git config --global --add safe.directory $PWD
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libopenxr_loader.so.git
          aws s3 cp libopenxr_loader.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload git revision

  linux-cross:
    name: Linux Cross
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    strategy:
      fail-fast: false
      matrix:
        BUILD: [arm32, arm64]
        include:
          - BUILD: arm32
            ARCH: arm32
            CROSS_ARCH: armhf
            PACKAGES: gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross
            CROSS_PACKAGES: libgl1-mesa-dev:armhf libvulkan-dev:armhf libx11-xcb-dev:armhf libxcb-dri2-0-dev:armhf libxcb-glx0-dev:armhf libxcb-icccm4-dev:armhf libxcb-keysyms1-dev:armhf libxcb-randr0-dev:armhf libxrandr-dev:armhf libxxf86vm-dev:armhf mesa-common-dev:armhf libwayland-dev:armhf
            CC: PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/arm-linux-gnueabihf/pkgconfig CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++
            STRIP: arm-linux-gnueabihf-strip
          - BUILD: arm64
            ARCH: arm64
            CROSS_ARCH: arm64
            PACKAGES: gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
            CROSS_PACKAGES: libgl1-mesa-dev:arm64 libvulkan-dev:arm64 libx11-xcb-dev:arm64 libxcb-dri2-0-dev:arm64 libxcb-glx0-dev:arm64 libxcb-icccm4-dev:arm64 libxcb-keysyms1-dev:arm64 libxcb-randr0-dev:arm64 libxrandr-dev:arm64 libxxf86vm-dev:arm64 mesa-common-dev:arm64 libwayland-dev:arm64
            CC: PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/aarch64-linux-gnu/pkgconfig CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++
            STRIP: aarch64-linux-gnu-strip
    env:
      LWJGL_ARCH: ${{matrix.ARCH}}
    steps:
      - run: |
          apt-get -y update
          apt-get -y install software-properties-common wget
          apt-get -y install --reinstall ca-certificates
          apt-get -y update
          apt-get -y upgrade
          wget https://apt.kitware.com/keys/kitware-archive-latest.asc
          apt-key add kitware-archive-latest.asc
          add-apt-repository -y 'deb https://apt.kitware.com/ubuntu/ bionic main'
          add-apt-repository -y ppa:git-core/ppa
          apt-get -y update
          DEBIAN_FRONTEND=noninteractive apt-get -yq install awscli git
        name: Upgrade git
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - run: DEBIAN_FRONTEND=noninteractive apt-get -yq install cmake ${{matrix.PACKAGES}}
        name: Install dependencies
      - run: |
          sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
          grep "ubuntu.com/ubuntu" /etc/apt/sources.list | tee /etc/apt/sources.list.d/ports.list
          sed -i 's/amd64,i386/armhf,arm64/' /etc/apt/sources.list.d/ports.list
          sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
          dpkg --add-architecture ${{matrix.CROSS_ARCH}}
          apt-get update
        name: Prepare cross-compilation
      - run: apt-get -yq --allow-unauthenticated --no-install-suggests --no-install-recommends install ${{matrix.CROSS_PACKAGES}} -o Dpkg::Options::="--force-overwrite"
        name: Install cross-compilation dependencies
      - run: ${{matrix.CC}} cmake -B build $OPENXR_PARAMS -DCMAKE_BUILD_TYPE=Release
        name: Configure build
      - run: |
          cmake --build build --parallel
          ${{matrix.STRIP}} build/src/loader/libopenxr_loader.so
        name: Build
      - run: aws s3 cp build/src/loader/libopenxr_loader.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload artifact
      - run: |
          git config --global --add safe.directory $(pwd)
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libopenxr_loader.so.git
          aws s3 cp libopenxr_loader.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
        name: Upload git revision

  windows:
    name: Windows
    runs-on: windows-2022
    strategy:
      matrix:
        ARCH: [x86, x64, arm64]
        include:
          - ARCH: x86
            PLATFORM: Win32
          - ARCH: x64
            PLATFORM: x64
          - ARCH: arm64
            PLATFORM: ARM64
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - run: cmake -B build -G "Visual Studio 17 2022" -A ${{matrix.PLATFORM}} ${{env.OPENXR_PARAMS}}
        shell: cmd
        name: Configure build
      - run: cmake --build build --parallel --config Release --parallel
        shell: cmd
        name: Build
      - run: aws s3 cp build\src\loader\Release\openxr_loader.dll s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/openxr-loader.dll ${{env.S3_PARAMS}}
        shell: cmd
        name: Upload artifact
      - run: |
          git log --first-parent --pretty=format:%%H HEAD~2..HEAD~1 > revision.git
          aws s3 cp revision.git s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/openxr-loader.dll.git ${{env.S3_PARAMS}}
        shell: cmd
        name: Upload git revision
